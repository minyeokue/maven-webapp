pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: maven
    image: maven:3-openjdk-17
    command: [ 'sleep' ]
    args: [ 'infinity' ]
  - name: git
    image: alpine/git
    command: [ 'sleep' ]
    args: [ 'infinity' ]
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command: [ 'sleep' ]
    args: [ 'infinity' ]
    volumeMounts:
      - name: registry-credentials
        mountPath: /kaniko/.docker
  volumes:
    - name: registry-credentials
      secret:
        secretName: regcred
        items:
        - key: .dockerconfigjson
          path: config.json
'''
        }
    }
    stages {
        stage('Checkout') {
            steps {
                container('maven') {
                    git branch: 'main',
                    url: 'https://github.com/minyeokue/maven-webapp.git'
                }
            }
        }
        stage('Build') {
            steps {
                container('maven') {
                    sh 'mvn package -DstipTests=true'
                }
            }
        }
        stage('Test') {
            steps {
                container('maven') {
                    sh 'mvn test'
                }
            }
        }
        stage('Build & Tag & Push Docker Image to Dockerhub') {
            steps {
                container('kaniko') {
                    sh 'executor --context=dir://$WORKSPACE --destination=minyeokue/webapp:$BUILD_NUMBER --destination=minyeokue/webapp:latest'
                }
            }
        }
        stage('Update K8s Manifests & Push') {
            environment {
                githubUser = 'MinHyeok Ko'
                githubEmail = 'fnels154@gmail.com'
                githubId = 'minyeokue'
                githubRepo = 'argo-cd'
                githubURL = "https://github.com/${githubId}/${githubRepo}.git"
                dockerhubId = 'minyeokue'
                dockerhubRepo = 'webapp'
            }
            steps {
                container('git') {
                    git branch: 'main', credentialsId: 'github-credential', url: "${githubURL}"
                    sh "git config --global --add safe.directory ${env.WORKSPACE}"
                    sh "git config --global user.name ${githubUser}"
                    sh "git config --global user.email ${githubEmail}"
                    sh 'sed -i "s/image:.*/image: ${dockerhubId}\\/${dockerhubRepo}:${BUILD_NUMBER}/g" deployment.yaml'
                    sh 'git add deployment.yaml'
                    sh 'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"'
                    withCredentials([gitUsernamePassword(credentialsId: 'github-credential', gitToolName: 'Default')]) {
                        sh 'git push --set-upstream origin main'
                    }
                }
            }
        }
    }
}
